name: CI Workflow

on:
  # push:
  #   branches:
  #     - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8

      - name: Lint code
        run: |
          flake8 app tests || true

      - name: Upload linting report
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: lint-report
          path: |
            .flake8
            black-report.txt

  format:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black

      - name: Check formatting
        run: |
          black --check app tests || true

      - name: Format code
        if: github.event_name == 'push'
        run: |
          black app tests || true

      - name: Upload formatting report
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: format-report
          path: |
            black-report.txt

  test:
    runs-on: ubuntu-latest
    needs: format
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest coverage pytest-cov

      - name: Run tests with coverage
        run: |
          pytest --maxfail=1 --disable-warnings -q --tb=short --cov=app --cov-report=term > coverage-report.txt

      - name: Upload test coverage report
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage-report.txt

  safety:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install safety

      # - name: Run Safety scan
      #   run: |
      #     safety scan --api-key ${{ secrets.SAFETY_API_KEY }} || true

      - name: Run Safety Scan
        uses: pyupio/safety-action@v1
        with:
          api-key: ${{ secrets.SAFETY_API_KEY }}


  bandit:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install bandit

      - name: Run Bandit security scan
        run: |
          bandit -r app -f txt -o bandit-report.txt || true

      - name: Upload Bandit report
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: bandit-report
          path: bandit-report.txt
